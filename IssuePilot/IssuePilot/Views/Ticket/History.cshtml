@model IssuePilot.Models.ViewModels.TicketHistoryViewModel

@{
    ViewData["Title"] = "Ticketverlauf";
    ViewBag.Tab = "2";
}
<div class="row justify-content-between mx-0">
    <h4 class="text-break">
        <a class="back-link btn-slide rounded-pill pr-2 py-1" asp-route-id="@Model.ProjectId" asp-action="Tickets" asp-controller="Ticket">
            <span class="icon-wrapper-clickable">
                <svg class="back-icon" width="15" height="25" viewBox="0 0 15 30" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M12 24L3.83456 15.018C2.79432 13.8738 2.79432 12.1262 3.83456 10.982L12 2" stroke-width="4" />
                </svg>
            </span> <span class="back-icon has-icon button-text">Tickets</span>
        </a>
    </h4>
    <span>
        @if (Model.IsCreator == true || User.IsInRole("Admin") || Model.IsProjectOwner == true)
        {
            <a style="min-width:60px" class="text-nowrap btn btn-slide btn-slide-blue btn-blue align-self-center ml-2 mb-2" asp-action="Edit" asp-route-id="@Model.Id">Ticket bearbeiten</a>
            <a style="min-width:60px" class="text-nowrap btn btn-slide btn-slide-blue btn-blue align-self-center ml-2 mb-2" asp-action="Delete" asp-route-id="@Model.Id">Ticket löschen</a>
        }
    </span>
</div>


<div class="mb-3 mt-3">
    <a class="tab-link underline-hover-wrapper" asp-action="Details" asp-route-id="@Model.Id"><span class="underline-hover">Ticketdetails</span></a>
    <a class="tab-link"><span class="gradient-underline">Ticketverlauf</span></a>
</div>
<hr />
<div class="row">
    <div class="offset-lg-3"></div>
    <div class="col-lg-6">
        <div class="card shadow-sm mb-4 ">
            <div class="card-header px-3 py-1">
                <span class="card-title">
                    @Html.DisplayFor(model => model.CreatorName)
                </span>
                <span class="card-text text-black-50 float-right">
                    <span class="icon-wrapper">
                        <img class="icon-padding align-top mt-1" src="~/img/Erstellungsdatum.svg" />
                    </span>
                    <small data-toggle="tooltip" data-placement="top" title="Erstellungsdatum" class="has-icon">@Html.DisplayFor(model => model.CreateDate)</small>
                </span>
            </div>

            <div class="card-body pt-1">
                <div class="card-title">
                    <h2 style="line-height: 150%;">
                        <span>
                            @Html.DisplayFor(model => model.Title)
                        </span>
                        @switch (Model.Weight)
                        {
                            case 1:
                                <span class="low-priority-box rounded p-1 ml-1">Niedrig</span>
                                break;
                            case 2:
                                <span class="middle-priority-box rounded p-1 ml-1">Mittel</span>
                                break;
                            case 3:
                                <span class="high-priority-box rounded p-1 ml-1">Hoch</span>
                                break;
                        }
                        <small style="font-family: Montserrat-Regular;">#@Html.DisplayFor(model => model.Id)</small>
                    </h2>
                </div>
            </div>
        </div>

        @foreach (var ticketHistoryEntry in Model.TicketHistoryEntriesOfTicket.OrderByDescending(ticketHistoryEntry => ticketHistoryEntry.CreateDate))
        {
            <div class="row no-gutters align-items-center">
                <div class="col-sm-2 py-2">
                    <div class="float-right text-muted small">@Html.DisplayFor(modelticketHistoryEntry => ticketHistoryEntry.CreateDate)</div>
                </div>

                <div class="col-sm-1 text-center flex-column d-none d-sm-flex">
                    <div class="row h-50">
                        <div class="col border-right">&nbsp;</div>
                        <div class="col">&nbsp;</div>
                    </div>
                    <h5 class="m-2">
                        @switch (ticketHistoryEntry.TicketHistoryEntryCaseId)
                            {
                                case IssuePilot.Models.DBModels.TicketHistoryEntryCaseId.MemberAssigned:
                                <span class="badge badge-pill bg-added border">&nbsp;</span>
                                break;
                            case IssuePilot.Models.DBModels.TicketHistoryEntryCaseId.MemberUnassigned:
                                <span class="badge badge-pill bg-removed border">&nbsp;</span>
                                break;
                            case IssuePilot.Models.DBModels.TicketHistoryEntryCaseId.TicketOpened:
                                <span class="badge badge-pill bg-open border">&nbsp;</span>
                                break;
                            case IssuePilot.Models.DBModels.TicketHistoryEntryCaseId.TicketCanceled:
                                <span class="badge badge-pill bg-canceled border">&nbsp;</span>
                                break;
                            case IssuePilot.Models.DBModels.TicketHistoryEntryCaseId.TicketClosed:
                                <span class="badge badge-pill bg-closed border">&nbsp;</span>
                                break;
                            case IssuePilot.Models.DBModels.TicketHistoryEntryCaseId.TicketInProgress:
                                <span class="badge badge-pill bg-dblue border">&nbsp;</span>
                                break;
                            case IssuePilot.Models.DBModels.TicketHistoryEntryCaseId.TicketPaused:
                                <span class="badge badge-pill bg-paused border">&nbsp;</span>
                                break;
                            case IssuePilot.Models.DBModels.TicketHistoryEntryCaseId.CommentAdded:
                                <span style="background-color: #464c50;" class="badge badge-pill border">&nbsp;</span>
                                break;
                            case IssuePilot.Models.DBModels.TicketHistoryEntryCaseId.CommentDeleted:
                                <span style="background-color: #C14640;" class="badge badge-pill border">&nbsp;</span>
                                break;
                        }
                    </h5>
                    <div class="row h-50">
                        <div class="col border-right">&nbsp;</div>
                        <div class="col">&nbsp;</div>
                    </div>
                </div>
                <div class="col-sm py-2 my-auto">
                    <div class="card shadow-sm">
                        <div class="card-body p-3">
                            <p class="my-auto text-break">
                                <b>@Html.DisplayFor(modelticketHistoryEntry => ticketHistoryEntry.EntryCreator.UserName)</b>
                                @switch (ticketHistoryEntry.TicketHistoryEntryCaseId)
                                {
                                    case IssuePilot.Models.DBModels.TicketHistoryEntryCaseId.MemberAssigned:
                                        @if (ticketHistoryEntry.ReferredUser.Id == ticketHistoryEntry.EntryCreator.Id)
                                        {
                                            <text>hat sich dem <b>Ticket hinzugefügt</b>.</text>
                                        }
                                        else
                                        {
                                            <text>hat </text>
                                            <b>@Html.DisplayFor(modelticketHistoryEntry => ticketHistoryEntry.ReferredUser.UserName)</b>
                                            <text> dem <b>Ticket hinzugefügt</b>.</text>
                                        }
                                        break;
                                    case IssuePilot.Models.DBModels.TicketHistoryEntryCaseId.MemberUnassigned:
                                        @if (ticketHistoryEntry.ReferredUser.Id == ticketHistoryEntry.EntryCreator.Id)
                                        {
                                            <text>hat sich vom <b>Ticket entfernt</b>.</text>
                                        }
                                        else
                                        {
                                            <text>hat </text>
                            <b>@Html.DisplayFor(modelticketHistoryEntry => ticketHistoryEntry.ReferredUser.UserName)</b>
                                            <text> vom <b>Ticket entfernt</b>.</text>
                                        }
                                        break;
                                    case IssuePilot.Models.DBModels.TicketHistoryEntryCaseId.TicketOpened:
                                        <text>hat den Status des Tickets auf <b>Offen</b> gestellt.</text>
                                        break;
                                    case IssuePilot.Models.DBModels.TicketHistoryEntryCaseId.TicketCanceled:
                                        <text>hat den Status des Tickets auf <b>Abgebrochen</b> gestellt.</text>
                                        break;
                                    case IssuePilot.Models.DBModels.TicketHistoryEntryCaseId.TicketClosed:
                                        <text>hat das Ticket <b>geschlossen</b>.</text>
                                        break;
                                    case IssuePilot.Models.DBModels.TicketHistoryEntryCaseId.TicketInProgress:
                                        <text>hat den Status des Tickets auf <b>in Bearbeitung</b> gestellt.</text>
                                        break;
                                    case IssuePilot.Models.DBModels.TicketHistoryEntryCaseId.TicketPaused:
                                        <text>hat den Status des Tickets auf <b>Pause</b> gestellt.</text>
                                        break;
                                    case IssuePilot.Models.DBModels.TicketHistoryEntryCaseId.CommentAdded:
                                        <text>hat einen <b>Kommentar hinzugefügt</b>.</text>
                                        break;
                                    case IssuePilot.Models.DBModels.TicketHistoryEntryCaseId.CommentDeleted:
                                        @if (ticketHistoryEntry.ReferredUser.Id == ticketHistoryEntry.EntryCreator.Id)
                                        {
                                            <text>hat einen eigenen <b>Kommentar gelöscht</b>.</text>
                                        }
                                        else
                                        {
                                            <text>hat einen <b>Kommentar</b> von</text>
                                            <b>@Html.DisplayFor(modelticketHistoryEntry => ticketHistoryEntry.ReferredUser.UserName)</b>
                                            <text> <b>gelöscht</b>.</text>
                                        }
                                        break;
                                }
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

</div>

@{
    var prevWrapper = !Model.TicketHistoryEntriesOfTicket.HasPreviousPage ? "" : "underline-hover-wrapper";
    var prevUnderline = !Model.TicketHistoryEntriesOfTicket.HasPreviousPage ? "gradient-underline" : "underline-hover";
}
<div class="mb-md-3 mb-lg-4 mb-2"></div>
<div class="text-center mb-5">
    @if (Model.TicketHistoryEntriesOfTicket.PageIndex > 2)
    {
        <a asp-action="History"
           asp-route-pageNumber="1"
           class="tab-link underline-hover-wrapper">
            <span class="underline-hover">1</span>
        </a>
        <span>...</span>
    }

    @if (Model.TicketHistoryEntriesOfTicket.PageIndex > 1)
    {
        <a asp-action="History"
           asp-route-pageNumber="@(Model.TicketHistoryEntriesOfTicket.PageIndex - 1)"
           class="tab-link @prevWrapper">
            <span class="@prevUnderline">@(Model.TicketHistoryEntriesOfTicket.PageIndex - 1)</span>
        </a>
    }
    <a class="tab-link">
        <span class="gradient-underline">@Model.TicketHistoryEntriesOfTicket.PageIndex</span>
    </a>
    @if (Model.TicketHistoryEntriesOfTicket.HasNextPage)
    {
        <a asp-action="History"
           asp-route-pageNumber="@(Model.TicketHistoryEntriesOfTicket.PageIndex + 1)"
           class="tab-link underline-hover-wrapper">
            <span class="underline-hover">@(Model.TicketHistoryEntriesOfTicket.PageIndex + 1)</span>
        </a>
    }
    @if (Model.TicketHistoryEntriesOfTicket.TotalPages > Model.TicketHistoryEntriesOfTicket.PageIndex + 1)
    {
        <a asp-action="History"
           asp-route-pageNumber="@(Model.TicketHistoryEntriesOfTicket.PageIndex + 2)"
           class="tab-link underline-hover-wrapper">
            <span class="underline-hover">@(Model.TicketHistoryEntriesOfTicket.PageIndex + 2)</span>
        </a>
    }
    @if (Model.TicketHistoryEntriesOfTicket.TotalPages > Model.TicketHistoryEntriesOfTicket.PageIndex + 2)
    {
        <a asp-action="History"
           asp-route-pageNumber="@(Model.TicketHistoryEntriesOfTicket.PageIndex + 3)"
           class="tab-link underline-hover-wrapper">
            <span class="underline-hover">@(Model.TicketHistoryEntriesOfTicket.PageIndex + 3)</span>
        </a>
    }
</div>